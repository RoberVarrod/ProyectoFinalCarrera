@model IEnumerable<FrontEnd.Models.PaqueteUsuarioSucursal>
@{
    ViewData["Title"] = "Estado de Paquetes";
    Layout = "~/Views/Shared/_LayoutClientes.cshtml";
}

<!-- Header Start -->
<div class="jumbotron jumbotron-fluid mb-5">
    <div class="container text-center py-5">
        <h1 class="text-primary mb-4">Económica y Segura</h1>
        <h1 class="text-white display-3 mb-5">Envíos a Costa Rica </h1>
        <div class="mx-auto" style="width: 100%; max-width: 600px;">
            <div class="input-group">
                <input type="text" class="form-control border-light" style="padding: 30px;" placeholder="Tracking Id">
                <div class="input-group-append">
                    <button class="btn btn-primary px-3" data-toggle="modal" data-target="#detailsModal">Track</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Header End -->
<!-- Lista de Paquetes -->
<div class="container-fluid py-4">
    <h4 class="mb-4 text-primary">Lista de Paquetes</h4>
    <table class="table table-hover table-striped shadow-sm">
        <thead class="thead-dark">
            <tr>
                <th>Tracking ID</th>
                <th>Oficina</th>
                <th>Nombre Cliente</th>
                <th>Estado de pago</th>
                <th>Fecha de entrega estimada</th>
                <th>Tipo de Entrega</th>
                <th>Precio</th>
                <th>Estado de paquete</th>
                <th>Detalles</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var paquete in Model.Where(p => p.EstadoRuta == "En Sucursal" || p.EstadoRuta == "Entregado"))
                {
                    <tr>
                        <td>@paquete.NumeroRegistro</td>
                        <td>@(paquete.PaqueteSucursalNombre ?? "Sucursal Desconocida")</td>
                        <td>@(paquete.PaqueteUsuarioNombre ?? "Desconocido")</td>
                        <td>@paquete.EstadoPago</td>
                        <td>@(paquete.FechaEntregaEstimada?.ToString("dd/MM/yyyy") ?? "Fecha no disponible")</td>
                        <td>@(paquete.TipoEntrega ?? "No especificado")</td>
                        <td>$@(paquete.Precio ?? 0)</td>
                        <td>@paquete.EstadoRuta</td>
                        <td>
                            <button class="btn btn-link" data-toggle="modal" data-target="#detailsModal-@paquete.IdPaquete">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="9" class="text-center">No hay paquetes disponibles.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<!-- Lista de Paquetes End -->
<!-- Modal Detalles -->
@foreach (var paquete in Model.Where(p => p.EstadoRuta == "En Sucursal" || p.EstadoRuta == "Entregado"))
{
    <div class="modal fade" id="detailsModal-@paquete.IdPaquete" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Detalles del Paquete</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><strong>Tracking ID:</strong> @paquete.NumeroRegistro</p>
                    <p><strong>Nombre del Cliente:</strong> @paquete.PaqueteUsuarioNombre</p>
                    <p><strong>Detalles:</strong></p>
                    <ul>
                        <li>Alto: @paquete.PaqueteAlto cm</li>
                        <li>Largo: @paquete.PaqueteLargo cm</li>
                        <li>Ancho: @paquete.PaqueteAncho cm</li>
                    </ul>
                    <p><strong>Estado:</strong> @paquete.EstadoRuta</p>
                    <p><strong>Pago:</strong> @paquete.EstadoPago</p>
                    <p><strong>Fecha Estimada de Entrega:</strong> @(paquete.FechaEntregaEstimada?.ToString("dd/MM/yyyy") ?? "Fecha no disponible")</p>
                    <p><strong>Tipo de Entrega:</strong> @(paquete.TipoEntrega ?? "No especificado")</p>
                    <p><strong>Precio:</strong> $@(paquete.Precio ?? 0)</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}
<!-- Modal End -->



<script>
    // Variables
    const domicilioButton = document.getElementById("domicilioButton");
    const sucursalButton = document.getElementById("sucursalButton");
    const domicilioConfirmation = document.getElementById("domicilioConfirmation");
    const sucursalConfirmation = document.getElementById("sucursalConfirmation");
    const domicilioAddressForm = document.getElementById("domicilioAddressForm");
    const modifyAddressBtn = document.getElementById("modifyAddressBtn");
    const verifyAddressBtn = document.getElementById("verifyAddressBtn");

    // Función para mostrar la descripción de Entrega a Domicilio
    domicilioButton.addEventListener("click", function () {
        // Resetea los botones cuando se selecciona el método de Entrega a Domicilio
        domicilioConfirmation.style.display = "block";
        sucursalConfirmation.style.display = "none";
        domicilioAddressForm.style.display = "none";
        modifyAddressBtn.style.display = "inline-block";
        verifyAddressBtn.style.display = "inline-block";

    });

    // Función para mostrar la descripción de Retiro en Sucursal
    sucursalButton.addEventListener("click", function () {
        sucursalConfirmation.style.display = "block";
        domicilioConfirmation.style.display = "none";
        domicilioAddressForm.style.display = "none";
        modifyAddressBtn.style.display = "none";
        verifyAddressBtn.style.display = "none";
    });

    // Confirmación de Entrega a Domicilio
    document.getElementById("confirmDomicilioBtn").addEventListener("click", function () {
        domicilioConfirmation.style.display = "none";
        domicilioAddressForm.style.display = "block";
        modifyAddressBtn.style.display = "inline-block";
        verifyAddressBtn.style.display = "inline-block";

        // Bloquea los campos nuevamente
        const inputs = domicilioAddressForm.querySelectorAll('input, textarea');
        inputs.forEach(input => input.disabled = true);
    });

    // Confirmación de Retiro en Sucursal
    document.getElementById("confirmSucursalBtn").addEventListener("click", function () {
        domicilioAddressForm.style.display = "none";
        $('#detailsModal').modal('hide');
    });

    // Habilitar campos de dirección para modificación
    modifyAddressBtn.addEventListener("click", function () {
        const inputs = domicilioAddressForm.querySelectorAll('input, textarea');
        inputs.forEach(input => input.disabled = false);
        modifyAddressBtn.style.display = "none";
        verifyAddressBtn.style.display = "inline-block";
    });

    // Verificar dirección y cerrar modal
    verifyAddressBtn.addEventListener("click", function () {
        domicilioAddressForm.style.display = "none";
        $('#detailsModal').modal('hide');
    });
</script>